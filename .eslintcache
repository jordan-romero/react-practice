[{"/Users/jordanromero/Development/code/postgrad/react-practice/src/reportWebVitals.js":"1","/Users/jordanromero/Development/code/postgrad/react-practice/src/index.js":"2","/Users/jordanromero/Development/code/postgrad/react-practice/src/components/Persons/Person/Person.js":"3","/Users/jordanromero/Development/code/postgrad/react-practice/src/containers/App.js":"4"},{"size":362,"mtime":1612037319125,"results":"5","hashOfConfig":"6"},{"size":511,"mtime":1612305201414,"results":"7","hashOfConfig":"6"},{"size":774,"mtime":1612216728125,"results":"8","hashOfConfig":"6"},{"size":2799,"mtime":1612305285476,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1uz21rx",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"/Users/jordanromero/Development/code/postgrad/react-practice/src/reportWebVitals.js",[],"/Users/jordanromero/Development/code/postgrad/react-practice/src/index.js",[],"/Users/jordanromero/Development/code/postgrad/react-practice/src/components/Persons/Person/Person.js",["20"],"import React from 'react'\nimport './Person.css'\nimport styled from 'styled-components'\n\nconst Person = (props) => {\n\n    const style ={\n        '@media (min-width: 500px)': {\n            width: '450px'\n        }\n    }\n\n    const StyledDiv = styled.div`\n    width: 60%; \n    margin: 16px auto;\n    border: 1px solid #eee; \n    box-shadow: 0 2px 3px #ccc;\n    padding: 16px;\n    text-align: center;\n    @media (min-width: 500px): {\n        width: '450px'\n    }\n    `\n\n    return (\n       <StyledDiv>\n            <p onClick={props.onClick}>My name is {props.name} and I am {props.age} years old!</p> \n            <p>{props.children}</p>\n            <input type='text' onChange={props.onChange} value={props.name}/>\n        </StyledDiv>\n        )\n    }\n\nexport default (Person)\n","/Users/jordanromero/Development/code/postgrad/react-practice/src/containers/App.js",["21"],"import React, { Component } from 'react'\nimport Person from '../components/Persons/Person/Person'\nimport  classes from './App.css'\n// import styled from 'styled-components'\n\n// const StyledButton = styled.button`\n//       background-color: ${props => props.alt ? 'red' : 'green'};\n//       color: white;\n//       font: inherit;\n//       border: 1px solid blue;\n//       padding: 8px;\n//       cursor: pointer;\n//       &:hover {\n//         background-color: ${props => props.alt ? 'salmon' : 'lightgreen'};\n//         color: black\n//       }\n//     `\n\nclass App extends Component {\n\n  state = {\n    persons: [\n      {id: 1, name: 'Max', age: 30 },\n      {id: 2, name: 'Jordan', age: 31 },\n      {id: 3, name: 'Tracie', age: 40 }\n    ],\n    showPersons: false, \n  }\n\n  deletePersonHandler = (personIndex) => {\n    const persons = [...this.state.persons]\n    persons.splice(personIndex, 1)\n    this.setState({persons: persons})\n  }\n\n  nameChangedHandler = (event, id) => {\n\n    const personIndex = this.state.persons.findIndex(p => {\n      return p.id === id \n    })\n\n    const person = {...this.state.persons[personIndex]}\n\n    person.name = event.target.value\n\n    const persons = [...this.state.persons]\n    persons[personIndex] = person \n\n    this.setState({persons: persons})\n  }\n\n  togglePersonsHandler = () => {\n    const doesShow = this.state.showPersons\n    this.setState({showPersons: !doesShow})\n  }\n\n  render() {\n\n    // const style = {\n    //   backgroundColor: 'green',\n    //   color: 'white',\n    //   font: 'inherit',\n    //   border: '1px solid blue',\n    //   padding: '8px',\n    //   cursor: 'pointer',\n    //   ':hover': {\n    //     backgroundColor: 'lightgreen',\n    //     color: 'black'\n    //   }\n    // }\n\n    let persons = null; \n\n    if (this.state.showPersons) {\n      persons = (\n        <div > \n          {this.state.persons.map((person, index) => {\n            return <Person {...person} \n            onClick={() => this.deletePersonHandler(index)} \n            key={person.id}\n            onChange={(event) => this.nameChangedHandler(event, person.id)}/>\n          })}\n        </div> \n      )\n\n      // style.backgroundColor = 'red'\n      // style[':hover'] = {\n      //   backgroundColor: 'salmon',\n      //   color: 'black'\n      // }\n    }\n\n    // let classes = []\n    // if (this.state.persons.length <= 2) {\n    //   classes.push('red')\n    // }\n    // if (this.state.persons.length <= 1) {\n    //   classes.push('bold')\n    // }\n\n    return (\n      \n      <div className=\"App\">\n        <h1>Hi Im a React App</h1>\n        <p>This is really working</p>\n        <button \n          className={'button'}\n          onClick={this.togglePersonsHandler}>\n          Toggle Persons\n        </button>\n        {persons}\n      </div>\n      \n    )\n  }\n\n}\nexport default (App)\n",{"ruleId":"22","severity":1,"message":"23","line":7,"column":11,"nodeType":"24","messageId":"25","endLine":7,"endColumn":16},{"ruleId":"22","severity":1,"message":"26","line":3,"column":9,"nodeType":"24","messageId":"25","endLine":3,"endColumn":16},"no-unused-vars","'style' is assigned a value but never used.","Identifier","unusedVar","'classes' is defined but never used."]